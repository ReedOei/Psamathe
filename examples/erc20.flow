contract ERC20Bank {
    type Token is fungible asset nat
    type Approval is fungible consumable asset nat

    accounts : map address => Token
    allowances : map address => map address => Approval

    on create():
        Token --[ 1000000 ]-> account[msg.sender]

    view totalSupply() returns nat := total Token
    view balanceOf(addr : address) returns nat := account[addr]
    view allowance(src : address, dst : address) returns nat := allowances[src][dst]

    transaction transfer(dst : address, amount : nat):
        account[msg.sender] --[ amount ]-> account[dst]

    transaction approve(dst : address, amount : nat):
        consume everything from allowances[msg.sender][dst]
        Approval --[ amount ]-> allowances[msg.sender][dst]

    transaction transferFrom(src : address, dst : address, amount : nat):
        consume amount from allowances[src][dst]
        account[src] --[ amount ]-> account[dst]
}

