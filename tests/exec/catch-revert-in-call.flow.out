<generatedTop>
  <common>
    <k>
      .
    </k>
    <contracts>
      SetItem ( Main )
    </contracts>
    <fields>
      Main |-> .Set
    </fields>
    <constructors>
      Main |-> constructor ( .VarDefs , pass )
    </constructors>
    <functions>
      Main |-> SetItem ( transaction ( T , var ( 0 ) : ! bool , .VarDefs , ( pass revert ( "Blah" ) pack ) pass true --[ everything ]-> var ( 0 ) pack exit ) )
    </functions>
    <types>
      Main |-> SetItem ( type ( Main , SetItem ( asset )
      SetItem ( consumable ) , Main ) )
      address |-> SetItem ( type ( address , .Set , address ) )
      bool |-> SetItem ( type ( bool , .Set , bool ) )
      nat |-> SetItem ( type ( nat , SetItem ( fungible ) , nat ) )
      string |-> SetItem ( type ( string , .Set , string ) )
    </types>
    <freshCounter>
      5
    </freshCounter>
  </common>
  <lookup>
    this |-> loc ( -1 )
  </lookup>
  <storage>
    loc ( 2 ) |-> resource ( Main , emptyval )
    loc ( 4 ) |-> resource ( string , "Blah" )
    loc ( -1 ) |-> resource ( Base , .Map )
  </storage>
  <catchStack>
    .List
  </catchStack>
</generatedTop>
