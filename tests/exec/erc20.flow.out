<generatedTop>
  <common>
    <k>
      .
    </k>
    <contracts>
      SetItem ( ERC20Bank )
    </contracts>
    <fields>
      ERC20Bank |-> SetItem ( balance : ! ERC20Bank . Token )
    </fields>
    <constructors>
      ERC20Bank |-> constructor ( .VarDefs , pass )
    </constructors>
    <functions>
      ERC20Bank |-> .Set
    </functions>
    <types>
      ERC20Bank |-> SetItem ( type ( ERC20Bank , SetItem ( asset )
      SetItem ( consumable ) , ERC20Bank ) )
      SetItem ( type ( Token , SetItem ( asset )
      SetItem ( fungible ) , nat ) )
      address |-> SetItem ( type ( address , SetItem ( consumable )
      SetItem ( nonfungible ) , address ) )
      bool |-> SetItem ( type ( bool , SetItem ( consumable )
      SetItem ( nonfungible ) , bool ) )
      nat |-> SetItem ( type ( nat , SetItem ( consumable )
      SetItem ( fungible ) , nat ) )
      string |-> SetItem ( type ( string , SetItem ( consumable )
      SetItem ( nonfungible ) , string ) )
    </types>
    <freshCounter>
      3
    </freshCounter>
  </common>
  <lookup>
    this |-> loc ( -1 )
  </lookup>
  <storage>
    loc ( 1 ) |-> resource ( ERC20Bank . Token , emptyval )
    loc ( 2 ) |-> resource ( ERC20Bank , emptyval )
    loc ( -1 ) |-> resource ( Base , .Map )
  </storage>
  <catchStack>
    .List
  </catchStack>
</generatedTop>
