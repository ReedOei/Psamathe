transformer newAccount(a : ! nat) -> res : ! { name : ! nat, balance : ! nat } {
    0 --> var zero : ! nat
    { name : ! nat |-> a, balance : ! nat |-> zero } --> res
}

transformer mint(accounts : any list ! { name : ! nat, balance : ! nat }, recv : ! nat, amount : ! nat) -> accounts : any { name : ! nat, balance : ! nat } {
    accounts --[ ! such that eqNat(recv) ]-> var recvAccount : ! { name : ! nat, balance : ! nat }
}

;

0 --> var x : ! nat
[ x ] --> var ids : ! list ! nat
1 --> x
[ x ] --> ids
2 --> x
[ x ] --> ids

ids --> newAccount() --> var accounts : any list ! { name : ! nat, balance : ! nat }

