@misc{solidityByExample,
    title = {Solidity by Example},
    url = {https://solidity.readthedocs.io/en/v0.7.0/solidity-by-example.html},
    year = 2020,
    lastaccessed = {2020-07-28}
}

@article{rosu-serbanuta-2010-jlap,
  title={An Overview of the {K} Semantic Framework},
  author={Grigore Ro{\c s}u and Traian Florin {\c S}erb{\u a}nu{\c t}{\u a} },
  journal={Journal of Logic and Algebraic Programming},
  volume={79},
  number={6},
  pages={397--434},
  year={2010},
  ee={http://dx.doi.org/10.1016/j.jlap.2010.03.012},
  doi={10.1016/j.jlap.2010.03.012},
}

@article{Szabo97:Formalizing,
    author="Szabo, Nick",
    title="Formalizing and Securing Relationships on Public Networks",
    year="1997",
    doi = {https://doi.org/10.5210/fm.v2i9.548},
    journal = {{First Monday}},
    volume = {2},
    number = {9},
}

@misc{psamatheRepo,
    title = {Psamathe},
    url = {https://github.com/ReedOei/Psamathe},
    year = {2020},
    month = nov
}

@misc{erc20Consensys,
    title = {Tokens},
    url = {https://github.com/ConsenSys/Tokens},
    year = {2020},
    month = aug,
    lastaccessed = {2020-08-03}
}

@misc{erc20,
  title = {EIP 20: ERC-20 Token Standard},
  url = {https://eips.ethereum.org/EIPS/eip-20},
  year = {2015},
  lastaccessed = {2020-07-28}
}

@misc{erc721,
  title = {EIP 721: ERC-721 Non-Fungible Token Standard},
  url = {https://eips.ethereum.org/EIPS/eip-721},
  year = {2018},
  lastaccessed = {2020-07-28}
}

@misc{erc777,
  title = {EIP 777: ERC777 Token Standard},
  url = {https://eips.ethereum.org/EIPS/eip-777},
  year = {2017},
  lastaccessed = {2020-07-28}
}

@misc{erc1155,
  title = {EIP 1155: ERC-1155 Multi Token Standard},
  url = {https://eips.ethereum.org/EIPS/eip-1155},
  year = {2018},
  lastaccessed = {2020-07-28}
}

@misc{SolidityTryCatch,
  title = {Solidity 0.6.x features: try/catch statement},
  author = {Gesheva, Elena},
  url = {https://blog.ethereum.org/2020/01/29/solidity-0.6-try-catch/},
  year = {2020},
  lastaccessed = {2020-07-29}
}

@article{wood2014ethereum,
  title={Ethereum: A secure decentralised generalised transaction ledger},
  author={Wood, Gavin and others},
  journal={Ethereum project yellow paper},
  volume={151},
  number={2014},
  pages={1--32},
  year={2014}
}

@misc{oei2020psamathe,
      title={{Psamathe: A DSL with Flows for Safe Blockchain Assets}},
      author={Oei, Reed and Coblenz, Michael and Aldrich, Jonathan},
      year={2020},
      eprint={2010.04800},
      archivePrefix={arXiv},
      primaryClass={cs.PL},
      url={https://arxiv.org/abs/2010.04800}
}

@misc{DAO,
	title={Thoughts on The {DAO} Hack},
	url={http://hackingdistributed.com/2016/06/17/thoughts-on-the-dao-hack/},
	author={Sirer, Emin G{\"u}n},
	year={2016},
	organization={Hacking, Distributed},
	lastaccessed={July 29, 2020}
}

@article{OlivaEtAl2019,
    author = {Oliva, Gustavo and Hassan, Ahmed E. and Jiang, Zhen},
    year = {2019},
    month = {11},
    title = {An Exploratory Study of Smart Contracts in the Ethereum Blockchain Platform},
    journal = {Empirical Software Engineering},
    doi = {10.1007/s10664-019-09796-5}
}

@misc{coblenz2019obsidian,
    title={Obsidian: Typestate and Assets for Safer Blockchain Programming},
    author={Michael Coblenz and Reed Oei and Tyler Etzel and Paulette Koronkevich and Miles Baker and Yannick Bloem and Brad A. Myers and Joshua Sunshine and Jonathan Aldrich},
    year={2019},
    eprint={1909.03523},
    archivePrefix={arXiv},
    primaryClass={cs.PL}
}


@article{coblenzobsidian,
    author = {Coblenz, Michael and Oei, Reed and Etzel, Tyler and Koronkevich, Paulette and Baker, Miles and Bloem, Yannick and Myers, Brad A. and Sunshine, Joshua and Aldrich, Jonathan},
    title = {Obsidian: Typestate and Assets for Safer Blockchain Programming},
    year = {2020},
    issue_date = {December 2020},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {42},
    number = {3},
    issn = {0164-0925},
    url = {https://doi.org/10.1145/3417516},
    doi = {10.1145/3417516},
    abstract = {Blockchain platforms are coming into use for processing critical transactions among participants who have not established mutual trust. Many blockchains are programmable, supporting smart contracts, which maintain persistent state and support transactions that transform the state. Unfortunately, bugs in many smart contracts have been exploited by hackers. Obsidian is a novel programming language with a type system that enables static detection of bugs that are common in smart contracts today. Obsidian is based on a core calculus, Silica, for which we proved type soundness. Obsidian uses typestate to detect improper state manipulation and uses linear types to detect abuse of assets. We integrated a permissions system that encodes a notion of ownership to allow for safe, flexible aliasing. We describe two case studies that evaluate Obsidian’s applicability to the domains of parametric insurance and supply chain management, finding that Obsidian’s type system facilitates reasoning about high-level states and ownership of resources. We compared our Obsidian implementation to a Solidity implementation, observing that the Solidity implementation requires much boilerplate checking and tracking of state, whereas Obsidian does this work statically.},
    journal = {ACM Trans. Program. Lang. Syst.},
    month = nov,
    articleno = {14},
    numpages = {82},
    keywords = {alias control, ownership, permissions, smart contracts, type systems, blockchain, Typestate, linearity}
}

@inproceedings{luuOyente,
    author = {Luu, Loi and Chu, Duc-Hiep and Olickel, Hrishi and Saxena, Prateek and Hobor, Aquinas},
    title = {Making Smart Contracts Smarter},
    year = {2016},
    isbn = {9781450341394},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/2976749.2978309},
    doi = {10.1145/2976749.2978309},
    booktitle = {Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security},
    pages = {254–269},
    keywords = {blockchain, ethereum, cryptocurrencies, smart contract, symbolic execution},
    location = {Vienna, Austria},
    series = {CCS ’16}
}

@misc{SupplyChainUse,
    author="IBM",
    title="Blockchain for supply chain",
    url="https://www.ibm.com/blockchain/supply-chain/",
    lastaccessed="March 31, 2019",
    year="2019",
    organization={IBM}
}

@misc{HealthCareUse,
    author={{Harvard Business Review}},
    title="The Potential for Blockchain to Transform Electronic Health Records",
    url="https://hbr.org/2017/03/the-potential-for-blockchain-to-transform-electronic-health-records",
    year="2017",
    organization={Harvard University},
    lastaccessed = {February 18, 2020},
}

@inproceedings{Elsden18:Making,
 author = {Elsden, Chris and Manohar, Arthi and Briggs, Jo and Harding, Mike and Speed, Chris and Vines, John},
 title = {Making Sense of Blockchain Applications: A Typology for HCI},
 booktitle = {CHI Conference on Human Factors in Computing Systems},
 series = {CHI '18},
 year = {2018},
 isbn = {978-1-4503-5620-6},
 location = {Montreal QC, Canada},
 url = {http://doi.acm.org/10.1145/3173574.3174032},
 doi = {10.1145/3173574.3174032},
 acmid = {3174032},
 keywords = {bitcoin, blockchain, distributed ledger technology, identity, trust, typology},
 pages = {1-14},
}

@misc{EthereumForDevs,
    title = {Ethereum for Developers},
    year = {2020},
    url = {https://ethereum.org/en/developers/},
    lastaccessed = {2020-07-31}
}

@article{sergey2019scilla,
    author = {Sergey, Ilya and Nagaraj, Vaivaswatha and Johannsen, Jacob and Kumar, Amrit and Trunov, Anton and Hao, Ken Chan Guan},
    title = {Safer Smart Contract Programming with Scilla},
    year = {2019},
    issue_date = {October 2019},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {3},
    number = {OOPSLA},
    url = {https://doi.org/10.1145/3360611},
    doi = {10.1145/3360611},
    journal = {Proc. ACM Program. Lang.},
    month = oct,
    articleno = {185},
    numpages = {30},
    keywords = {Smart Contracts, Domain-Specific Languages, Blockchain, Static Analysis}
}

@misc{blackshear2019move,
  title={Move: A language with programmable resources},
  author={Blackshear, Sam and Cheng, Evan and Dill, David L and Gao, Victor and Maurer, Ben and Nowacki, Todd and Pott, Alistair and Qadeer, Shaz and Rain, Dario Russi and Sezer, Stephane and others},
  year={2019}
}

@article{das2019nomos,
  title={Resource-aware session types for digital contracts},
  author={Das, Ankush and Balzer, Stephanie and Hoffmann, Jan and Pfenning, Frank and Santurkar, Ishani},
  journal={arXiv preprint arXiv:1902.06056},
  year={2019}
}

@inproceedings{schrans2018flint,
  title={Writing safe smart contracts in Flint},
  author={Schrans, Franklin and Eisenbach, Susan and Drossopoulou, Sophia},
  booktitle={Conference Companion of the 2nd International Conference on Art, Science, and Engineering of Programming},
  pages={218--219},
  year={2018}
}

@inproceedings{bertoni2013keccak,
  title={Keccak},
  author={Bertoni, Guido and Daemen, Joan and Peeters, Micha{\"e}l and Van Assche, Gilles},
  booktitle={Annual international conference on the theory and applications of cryptographic techniques},
  pages={313--314},
  year={2013},
  organization={Springer}
}

