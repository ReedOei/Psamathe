<generatedTop>
  <common>
    <k>
      .
    </k>
    <contracts>
      SetItem ( Main )
    </contracts>
    <fields>
      Main |-> .Set
    </fields>
    <constructors>
      Main |-> constructor ( .VarDefs , pass )
    </constructors>
    <functions>
      Main |-> SetItem ( view ( get , ! nat , .VarDefs , 10 ) )
    </functions>
    <types>
      Main |-> SetItem ( type ( Main , SetItem ( asset )
      SetItem ( consumable ) , Main ) )
      address |-> SetItem ( type ( address , SetItem ( consumable )
      SetItem ( nonfungible ) , address ) )
      bool |-> SetItem ( type ( bool , SetItem ( consumable )
      SetItem ( nonfungible ) , bool ) )
      nat |-> SetItem ( type ( nat , SetItem ( consumable )
      SetItem ( fungible ) , nat ) )
      string |-> SetItem ( type ( string , SetItem ( consumable )
      SetItem ( nonfungible ) , string ) )
    </types>
    <freshCounter>
      5
    </freshCounter>
  </common>
  <lookup>
    this |-> loc ( -1 )
  </lookup>
  <storage>
    loc ( 1 ) |-> resource ( Main , emptyval )
    loc ( 3 ) |-> resource ( nat , 0 )
    loc ( 4 ) |-> resource ( nat , 10 )
    loc ( -1 ) |-> resource ( Base , .Map )
  </storage>
  <catchStack>
    .List
  </catchStack>
</generatedTop>
