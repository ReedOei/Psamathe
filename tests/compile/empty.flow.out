<generatedTop>
  <common>
    <k>
      .
    </k>
    <contracts>
      SetItem ( Main )
    </contracts>
    <fields>
      Main |-> .Set
    </fields>
    <constructors>
      Main |-> constructor ( .VarDefs , pass )
    </constructors>
    <functions>
      Main |-> .Set
    </functions>
    <types>
      Main |-> SetItem ( type ( Main , SetItem ( asset )
      SetItem ( consumable ) , Main ) )
      address |-> SetItem ( type ( address , SetItem ( consumable )
      SetItem ( nonfungible ) , address ) )
      bool |-> SetItem ( type ( bool , SetItem ( consumable )
      SetItem ( nonfungible ) , bool ) )
      nat |-> SetItem ( type ( nat , SetItem ( consumable )
      SetItem ( fungible ) , nat ) )
      string |-> SetItem ( type ( string , SetItem ( consumable )
      SetItem ( nonfungible ) , string ) )
    </types>
    <freshCounter>
      0
    </freshCounter>
  </common>
  <objects>
    ListItem ( object "Test" { code { sstore ( 0 , caller ( ) ) datacopy ( 0 , dataoffset ( "runtime" ) , datasize ( "runtime" ) ) return ( 0 , datasize ( "runtime" ) ) } } )
  </objects>
</generatedTop>
