contract NFToken {
  type Token is unique immutable asset uint256
  type Approval is unique immutable consumable asset uint256
  balances : linking address <=> set Token
  approval : linking address <=> set Approval
  ownerToOperators : linking address <=> set address

  view canTransfer(tokId : uint256) returns bool :=
// `A in B` is true iff we can select `A` from `B`.
// It can be implemented efficiently if the LHS is hashable.
    tokId in balances[msg.sender] or
    tokId in approval[msg.sender] or
    msg.sender in ownerToOperators[balances.ownerOf(tokId)]

  transaction transferFrom(_from : address, _to : address, tokId : uint256):
    only when _to != 0x0 and canTransfer(tokId)
    if approval.hasOwner(tokId) {
      approval[approval.ownerOf(tokId)] --[ tokId ]-> consume
    }
    balances[_from] --[ tokId ]-> balances[_to]
}

